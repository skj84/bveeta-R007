<?xml version="1.0"?>

<launch>

  <param name="use_sim_time" value="false"/>
  <include file="$(find ydlidar_ros)/launch/X2L.launch"/>
  <include file="$(find ros_arduino_python)/launch/arduino.launch"/>
  <include file="$(find move_base)/launch/amcl_diff.launch"/>
  <include file="$(find urdf_bveeta)/launch/bveeta_urdf.launch"/> <!--run urdf for robot state publisher-->
  <!--<include file="$(find usb_cam)/launch/usb_cam.launch"/>--> <!--<enable useb camera when you have it-->

  
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find move_base)/nav/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find move_base)/nav/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find move_base)/nav/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find move_base)/nav/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find move_base)/nav/dwa_local_planner.yaml" command="load"/>
            <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS"/>
  </node>

  <!--add EKF for localization package. Fusing Wheel Odometry with Imu-->
  <!--<node pkg="robot_localization" type="ekf_localization_node" name="ekf_se" clear_params="true">
    <rosparam command="load" file="$(find robot_localization)/params/ekf.yaml"/>
    <remap from="odometry/filtered" to="/imu/data"/>
  </node>-->
 <!--<node pkg="tf" type="static_transform_publisher" name="map_to_odom_broadcaster" args="0 0 0 0 0 0 map odom 1200"/>-->
<!--<node pkg="tf" type="static_transform_publisher" name="imu_to_base_broadcaster" args="0 0 0 0 0 0 base_link base_imu 500"/>-->

</launch>

